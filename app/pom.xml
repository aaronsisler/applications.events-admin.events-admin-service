<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.ebsolutions.eventsadminservice</groupId>
        <artifactId>events-admin-service-parent</artifactId>
        <version>0.9.0</version>
    </parent>

    <artifactId>events-admin-service</artifactId>
    <packaging>${packaging}</packaging>

    <properties>
        <packaging>jar</packaging>
        <micronaut.runtime>netty</micronaut.runtime>
        <micronaut.aot.enabled>false</micronaut.aot.enabled>
        <exec.mainClass>com.ebsolutions.eventsadminservice.EventsAdminServiceApplication</exec.mainClass>

        <!-- Micronaut Parent Pom Versions -->
        <!-- These formats come from the parent micronaut project/pom -->
        <version.micronaut>${micronaut.version}</version.micronaut>
        <version.micronaut.serialization>${micronaut.serialization.version}</version.micronaut.serialization>

        <!-- Versions -->
        <version.aws.sdk>2.21.15</version.aws.sdk>
        <version.fastcsv>3.0.0</version.fastcsv>
        <version.opencsv>5.9</version.opencsv>
        <version.commons.codec>1.15</version.commons.codec>
        <version.commons.collections>3.2.2</version.commons.collections>
        <version.jackson.datatype.jsr310>2.15.2</version.jackson.datatype.jsr310>

        <!-- Testing Version -->
        <version.cucumber>7.17.0</version.cucumber>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- AWS SDK library needed for Database and File Storage access -->
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${version.aws.sdk}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- Version conflict -->
            <!-- Where is this conflict? Need more context Aaron..... -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${version.commons.codec}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${version.commons.collections}</version>
            </dependency>

            <!-- Needed for Application logging annotations to work -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.lombok}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- START: Micronaut Dependencies -->

        <!-- Needed for Application to start-->
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-server-netty</artifactId>
        </dependency>

        <!-- Needed for Application to start-->
        <dependency>
            <groupId>io.micronaut.serde</groupId>
            <artifactId>micronaut-serde-jackson</artifactId>
        </dependency>

        <!-- Not sure where this needed -->
        <dependency>
            <groupId>io.micronaut.validation</groupId>
            <artifactId>micronaut-validation</artifactId>
        </dependency>

        <!-- END: Micronaut Dependencies -->

        <!-- START: AWS Dependencies -->

        <!-- AWS DynamoDB config and methods -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>dynamodb-enhanced</artifactId>
        </dependency>

        <!-- AWS S3 File storage -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>s3</artifactId>
        </dependency>

        <!-- END: AWS Dependencies -->

        <!-- START: Third Party Dependencies -->

        <!-- Needed for Application.yml parsing-->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Needed for Application logging to work -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>

        <!-- Needed for Application logging to work -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>

        <!-- Needed for Application logging annotations to work -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
        </dependency>

        <!-- Needed for Application logging annotations to work -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Not sure where this needed -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <!-- Added for generation of the CSV -->
        <dependency>
            <groupId>de.siegmar</groupId>
            <artifactId>fastcsv</artifactId>
            <version>${version.fastcsv}</version>
        </dependency>

        <!-- END: Third Party Dependencies -->

        <!-- START: Testing Dependencies -->

        <!-- Handles Spock testing with Micronaut -->
        <dependency>
            <groupId>io.micronaut.test</groupId>
            <artifactId>micronaut-test-spock</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Handles Spock testing with Micronaut -->
        <!-- Need to see why this exclusion is needed and can we have this at the top layer Dep Management -->
        <dependency>
            <groupId>org.spockframework</groupId>
            <artifactId>spock-core</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Handles Spock testing with Micronaut -->
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-inject-groovy</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Handles JUnit methods like assertEquals, etc. -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Handles HTTP Client that makes calls to mock server -->
        <dependency>
            <groupId>io.micronaut</groupId>
            <artifactId>micronaut-http-client</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- END: Testing Dependencies -->
    </dependencies>

    <build>
        <plugins>
            <!-- Makes sure that all dependencies are non-conflicting -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>dependency-convergence</id>
                        <phase>install</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <DependencyConvergence/>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Generates Java classes from OpenAPI contracts -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>models-shared</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/shared.yaml</inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>models-client</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/client.yaml</inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>models-location</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/location.yaml</inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>models-organizer</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/organizer.yaml</inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>models-event</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/event.yaml</inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>models-event-schedule</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/event-schedule.yaml</inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>models-scheduled-event</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/scheduled-event.yaml</inputSpec>
                        </configuration>
                    </execution>
                    <execution>
                        <id>models-published-event-schedule</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${pom.basedir}/contracts/published-event-schedule.yaml</inputSpec>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- The gmavenplus-plugin is used to compile Groovy code in the tests-->
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>compileTests</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- This handles injection of the annotated classes -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-inject-java</artifactId>
                            <version>${version.micronaut}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-graal</artifactId>
                            <version>${version.micronaut}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut</groupId>
                            <artifactId>micronaut-http-validation</artifactId>
                            <version>${version.micronaut}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.lombok}</version>
                        </path>
                        <path>
                            <groupId>com.fasterxml.jackson.datatype</groupId>
                            <artifactId>jackson-datatype-jsr310</artifactId>
                            <version>${version.jackson.datatype.jsr310}</version>
                        </path>
                        <path>
                            <groupId>io.micronaut.serde</groupId>
                            <artifactId>micronaut-serde-processor</artifactId>
                            <version>${version.micronaut.serialization}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>io.micronaut</groupId>
                                    <artifactId>micronaut-inject</artifactId>
                                </exclusion>
                            </exclusions>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <!-- Maven plugin to execute and package Micronaut applications -->
            <!-- https://micronaut-projects.github.io/micronaut-maven-plugin/latest/ -->
            <plugin>
                <groupId>io.micronaut.maven</groupId>
                <artifactId>micronaut-maven-plugin</artifactId>
                <configuration>
                    <configFile>aot-${packaging}.properties</configFile>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
